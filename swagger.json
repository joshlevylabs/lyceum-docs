{
    "swagger": "2.0",
    "info": {
      "title": "Si6ma API",
      "description": "Test description",
      "termsOfService": "https://www.google.com/policies/terms/",
      "contact": {
        "email": "support@thelyceum.io"
      },
      "license": {
        "name": "Private License"
      },
      "version": "v1"
    },
    "host": "api.thelyceum.io",
    "schemes": [
      "https"
    ],
    "basePath": "/api",
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      },
      "Token": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "security": [
      {
        "Bearer": []
      },
      {
        "Token": []
      }
    ],
    "paths": {
      "/account/": {
        "get": {
          "operationId": "account_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "post": {
          "operationId": "account_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AccountSignup"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/AccountSignup"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/check_availability/": {
        "post": {
          "operationId": "account_check_availability",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CheckUserAvailability"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/CheckUserAvailability"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/forgot_password/": {
        "post": {
          "operationId": "account_forgot_password",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ForgotPasswordSerialzier"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ForgotPasswordSerialzier"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/get_aws_token/": {
        "get": {
          "operationId": "account_get_aws_token",
          "description": "API returns temporary credentials for webClient to upload files to s3",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/invite/user/": {
        "post": {
          "operationId": "account_invite_invite_user_to_organization",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/InviteUser"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/InviteUser"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/login": {
        "post": {
          "operationId": "account_login_create",
          "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TokenObtainPair"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/TokenObtainPair"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/me/": {
        "get": {
          "operationId": "account_me",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/min/": {
        "get": {
          "operationId": "account_check_user_availability",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/UserAvailability"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/resend_email_verification/": {
        "get": {
          "operationId": "account_resend_email_verification_read",
          "description": "",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "description": "User id",
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ResendUserEmailVerificaton"
                }
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "post": {
          "operationId": "account_resend_email_verification_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ResendUserEmailVerificaton"
              }
            },
            {
              "name": "user_id",
              "in": "query",
              "description": "User id",
              "type": "boolean"
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ResendUserEmailVerificaton"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/reset_password/": {
        "post": {
          "operationId": "account_reset_password",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ResetPassword"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ResetPassword"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/token/refresh": {
        "post": {
          "operationId": "account_token_refresh_create",
          "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TokenRefresh"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/TokenRefresh"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/verify_email_address/": {
        "post": {
          "operationId": "account_verify_email_address",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Token"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Token"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": []
      },
      "/account/{id}/": {
        "get": {
          "operationId": "account_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "put": {
          "operationId": "account_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateUser"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "patch": {
          "operationId": "account_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateUser"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this User.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/account/{id}/follow/": {
        "get": {
          "operationId": "account_follow",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this User.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/account/{id}/follow_back/": {
        "get": {
          "operationId": "account_follow_back",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "tags": [
            "account"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this User.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/categories/": {
        "get": {
          "operationId": "categories_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/StandardCategory"
                }
              }
            }
          },
          "tags": [
            "categories"
          ]
        },
        "post": {
          "operationId": "categories_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          },
          "tags": [
            "categories"
          ]
        },
        "parameters": []
      },
      "/categories/{id}/": {
        "get": {
          "operationId": "categories_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          },
          "tags": [
            "categories"
          ]
        },
        "put": {
          "operationId": "categories_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          },
          "tags": [
            "categories"
          ]
        },
        "patch": {
          "operationId": "categories_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardCategory"
              }
            }
          },
          "tags": [
            "categories"
          ]
        },
        "delete": {
          "operationId": "categories_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "categories"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this category.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/comments/": {
        "get": {
          "operationId": "comments_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Comment"
                }
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "post": {
          "operationId": "comments_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "parameters": []
      },
      "/comments/{id}/": {
        "get": {
          "operationId": "comments_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "put": {
          "operationId": "comments_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "patch": {
          "operationId": "comments_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "delete": {
          "operationId": "comments_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this comment.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/comments/{id}/react/": {
        "post": {
          "operationId": "comments_react",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this comment.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/comments/{id}/reaction_history/": {
        "get": {
          "operationId": "comments_reaction_history",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "tags": [
            "comments"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this comment.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/component/": {
        "get": {
          "operationId": "component_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Component"
                }
              }
            }
          },
          "tags": [
            "component"
          ]
        },
        "post": {
          "operationId": "component_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          },
          "tags": [
            "component"
          ]
        },
        "parameters": []
      },
      "/component/{id}/": {
        "get": {
          "operationId": "component_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          },
          "tags": [
            "component"
          ]
        },
        "put": {
          "operationId": "component_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          },
          "tags": [
            "component"
          ]
        },
        "patch": {
          "operationId": "component_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Component"
              }
            }
          },
          "tags": [
            "component"
          ]
        },
        "delete": {
          "operationId": "component_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "component"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this component.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/configs/": {
        "get": {
          "operationId": "configs_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ConfigTypes"
                }
              }
            }
          },
          "tags": [
            "configs"
          ]
        },
        "post": {
          "operationId": "configs_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          },
          "tags": [
            "configs"
          ]
        },
        "parameters": []
      },
      "/configs/{id}/": {
        "get": {
          "operationId": "configs_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          },
          "tags": [
            "configs"
          ]
        },
        "put": {
          "operationId": "configs_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          },
          "tags": [
            "configs"
          ]
        },
        "patch": {
          "operationId": "configs_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypes"
              }
            }
          },
          "tags": [
            "configs"
          ]
        },
        "delete": {
          "operationId": "configs_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "configs"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this config types.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/configuration/": {
        "get": {
          "operationId": "configuration_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ConfigTypeHistory"
                }
              }
            }
          },
          "tags": [
            "configuration"
          ]
        },
        "post": {
          "operationId": "configuration_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          },
          "tags": [
            "configuration"
          ]
        },
        "parameters": []
      },
      "/configuration/{id}/": {
        "get": {
          "operationId": "configuration_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          },
          "tags": [
            "configuration"
          ]
        },
        "put": {
          "operationId": "configuration_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          },
          "tags": [
            "configuration"
          ]
        },
        "patch": {
          "operationId": "configuration_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConfigTypeHistory"
              }
            }
          },
          "tags": [
            "configuration"
          ]
        },
        "delete": {
          "operationId": "configuration_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "configuration"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this configuration.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/constants/": {
        "get": {
          "operationId": "constants_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ConstantTypes"
                }
              }
            }
          },
          "tags": [
            "constants"
          ]
        },
        "post": {
          "operationId": "constants_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          },
          "tags": [
            "constants"
          ]
        },
        "parameters": []
      },
      "/constants/{id}/": {
        "get": {
          "operationId": "constants_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          },
          "tags": [
            "constants"
          ]
        },
        "put": {
          "operationId": "constants_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          },
          "tags": [
            "constants"
          ]
        },
        "patch": {
          "operationId": "constants_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ConstantTypes"
              }
            }
          },
          "tags": [
            "constants"
          ]
        },
        "delete": {
          "operationId": "constants_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "constants"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this constant types.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/descriptors/": {
        "get": {
          "operationId": "descriptors_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DescriptorsList"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "descriptors"
          ]
        },
        "parameters": []
      },
      "/equipment/": {
        "get": {
          "operationId": "equipment_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Equipment"
                }
              }
            }
          },
          "tags": [
            "equipment"
          ]
        },
        "post": {
          "operationId": "equipment_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          },
          "tags": [
            "equipment"
          ]
        },
        "parameters": []
      },
      "/equipment/{id}/": {
        "get": {
          "operationId": "equipment_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          },
          "tags": [
            "equipment"
          ]
        },
        "put": {
          "operationId": "equipment_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          },
          "tags": [
            "equipment"
          ]
        },
        "patch": {
          "operationId": "equipment_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Equipment"
              }
            }
          },
          "tags": [
            "equipment"
          ]
        },
        "delete": {
          "operationId": "equipment_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "equipment"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this equipment.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/file/": {
        "get": {
          "operationId": "file_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UploadedFileList"
                }
              }
            }
          },
          "tags": [
            "file"
          ]
        },
        "post": {
          "operationId": "file_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          },
          "tags": [
            "file"
          ]
        },
        "parameters": []
      },
      "/file/{id}/": {
        "get": {
          "operationId": "file_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UploadedFileList"
              }
            }
          },
          "tags": [
            "file"
          ]
        },
        "put": {
          "operationId": "file_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          },
          "tags": [
            "file"
          ]
        },
        "patch": {
          "operationId": "file_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          },
          "tags": [
            "file"
          ]
        },
        "delete": {
          "operationId": "file_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "file"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this uploaded file.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/notification/": {
        "get": {
          "operationId": "notification_list",
          "description": "",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "q",
              "in": "query",
              "description": "Coma-seperated ids",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Notifications"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "notification"
          ]
        },
        "parameters": []
      },
      "/organization/groups/": {
        "get": {
          "operationId": "organization_groups_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "o_m",
              "in": "query",
              "description": "",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            {
              "name": "include",
              "in": "query",
              "description": "Include groups in response, its UUID comma seperated.",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/GroupsList"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "post": {
          "operationId": "organization_groups_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NestedGroup"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/NestedGroup"
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": []
      },
      "/organization/groups/metadata/": {
        "get": {
          "operationId": "organization_groups_metadata",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/NestedGroup"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": []
      },
      "/organization/groups/{id}/": {
        "get": {
          "operationId": "organization_groups_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GroupsList"
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "put": {
          "operationId": "organization_groups_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateNestedGroup"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateNestedGroup"
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "patch": {
          "operationId": "organization_groups_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateNestedGroup"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateNestedGroup"
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "delete": {
          "operationId": "organization_groups_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/organization/groups/{id}/accept/invitation/{invitation_id}/": {
        "get": {
          "operationId": "organization_groups_accept_accept_group_invitations",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/NestedGroup"
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/organization/groups/{id}/add_member/": {
        "put": {
          "operationId": "organization_groups_add_users_to_group",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddMemberToGroup"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/AddMemberToGroup"
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/organization/groups/{id}/change/role/{user_id}/": {
        "patch": {
          "operationId": "organization_groups_change_change_user_role_for_group",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateUserRoleForGroup"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateUserRoleForGroup"
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/organization/groups/{id}/invitations/": {
        "get": {
          "operationId": "organization_groups_list_group_invitations",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/GroupInvitations"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/organization/groups/{id}/join/": {
        "get": {
          "operationId": "organization_groups_join_group",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/NestedGroup"
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/organization/groups/{id}/reject/invitation/{invitation_id}/": {
        "get": {
          "operationId": "organization_groups_reject_reject_group_invitations",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/NestedGroup"
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/organization/groups/{id}/user/{user}/": {
        "delete": {
          "operationId": "organization_groups_delete_group_user",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/organization/groups/{id}/user_list/": {
        "get": {
          "operationId": "organization_groups_list_group_users",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "group_role",
              "in": "query",
              "description": "Group Role reference",
              "type": "string",
              "enum": [
                "ADMIN",
                "OWNER",
                "MEMBER"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/NestedGroup"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/organization/groups/{id}/user_metadata/": {
        "get": {
          "operationId": "organization_groups_user_meta_data",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/NestedGroup"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "organization"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this group.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/": {
        "get": {
          "operationId": "project_list",
          "description": "",
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects__category__id",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "groups__id",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "data_type",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "descriptors__descriptor_id",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "for_user",
              "in": "query",
              "description": "Projects of user",
              "type": "uuid"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ListProject"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "post": {
          "operationId": "project_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DataIngestionUpload"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/DataIngestionUpload"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/advance_search/": {
        "post": {
          "operationId": "project_advance_search",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Filter"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Filter"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/details/category/{project_id}/{category_id}/": {
        "get": {
          "operationId": "project_details_device_details",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ProjectDetail"
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/project/details/multiple/": {
        "post": {
          "operationId": "project_details_multiple_project_details",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/MultipleProjectDetails"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/MultipleProjectDetails"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/details/{id}/": {
        "get": {
          "operationId": "project_project_details",
          "description": "",
          "parameters": [
            {
              "name": "projects__device",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects__category",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ProjectDetail"
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/devices/": {
        "get": {
          "operationId": "project_devices_list",
          "description": "",
          "parameters": [
            {
              "name": "project",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "category",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DevicesAndCategoryDevice"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/devices/download/limits/{project_id}/": {
        "get": {
          "operationId": "project_devices_download_download_limits",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DevicesAndCategoryDevice"
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/project/devices/download/measurement/{project_id}/": {
        "get": {
          "operationId": "project_devices_download_download_measurement",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DevicesAndCategoryDevice"
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/project/devices/node/": {
        "post": {
          "operationId": "project_devices_get_node_data",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DevicesAndCategoryDevice"
              }
            },
            {
              "name": "data_type",
              "in": "query",
              "description": "Data Dimension types.",
              "type": "string",
              "enum": [
                "2D",
                "1D"
              ]
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/DevicesAndCategoryDevice"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/devices/node/descriptors/": {
        "get": {
          "operationId": "project_devices_node_get_descriptors",
          "description": "",
          "parameters": [
            {
              "name": "projects",
              "in": "query",
              "description": "Project UUID's must be comma seperated.",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DevicesAndCategoryDevice"
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/limits/": {
        "post": {
          "operationId": "project_create_limits",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateLimits"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/CreateLimits"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/metadata/": {
        "get": {
          "operationId": "project_dropdown_metadata",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects__category__id",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "groups__id",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "data_type",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "descriptors__descriptor_id",
              "in": "query",
              "description": "Multiple values may be separated by commas.",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Project"
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/statistics/": {
        "post": {
          "operationId": "project_create_statistics",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateUpdateStatistics"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/CreateUpdateStatistics"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/v2/upload/": {
        "post": {
          "operationId": "project_v2_create_v2",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DataIngestionUploadV2"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/DataIngestionUploadV2"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/v2/upload/native/": {
        "post": {
          "operationId": "project_v2_upload_create_v2_native",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DataIngestionUploadV2"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/DataIngestionUploadV2"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": []
      },
      "/project/{id}/": {
        "get": {
          "operationId": "project_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "put": {
          "operationId": "project_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ProjectUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ProjectUpdate"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "patch": {
          "operationId": "project_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ProjectUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ProjectUpdate"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "delete": {
          "operationId": "project_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/{id}/download_file/{file_id}/": {
        "get": {
          "operationId": "project_download_clean_data",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/{id}/get_download_code/{file_id}/": {
        "get": {
          "operationId": "project_download_cleaned_files_curl_and_shell",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/PowerShellAndCurl"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/{id}/privileges/": {
        "get": {
          "operationId": "project_project_access_details",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/{id}/recreate_clean_data/": {
        "get": {
          "operationId": "project_create_clean_data",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/project/{project_id}/properties/": {
        "get": {
          "operationId": "project_project_properties",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PropertiesList"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/project/{project_id}/properties/{id}/": {
        "get": {
          "operationId": "project_project_properties_object",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PropertiesList"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this device category property.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/project_categories/": {
        "get": {
          "operationId": "project_categories_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Category"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project_categories"
          ]
        },
        "parameters": []
      },
      "/project_category/": {
        "get": {
          "operationId": "project_category_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Category"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project_category"
          ]
        },
        "parameters": []
      },
      "/project_descriptors/": {
        "get": {
          "operationId": "project_descriptors_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/DescriptorsList"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "project_descriptors"
          ]
        },
        "parameters": []
      },
      "/property/": {
        "get": {
          "operationId": "property_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Property"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "post": {
          "operationId": "property_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PropertyCreate"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/PropertyCreate"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "parameters": []
      },
      "/property/brif_list/": {
        "get": {
          "operationId": "property_brif_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PropertyBriefViews"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "parameters": []
      },
      "/property/{id}/": {
        "get": {
          "operationId": "property_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Property"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "put": {
          "operationId": "property_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateProperty"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateProperty"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "patch": {
          "operationId": "property_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateProperty"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateProperty"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "delete": {
          "operationId": "property_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "property"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this property.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/property/{property_pk}/element/": {
        "post": {
          "operationId": "property_element_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PropertyElementCreateUpdate"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/PropertyElementCreateUpdate"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "parameters": [
          {
            "name": "property_pk",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/property/{property_pk}/element/{id}/": {
        "put": {
          "operationId": "property_element_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PropertyElementCreateUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/PropertyElementCreateUpdate"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "patch": {
          "operationId": "property_element_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PropertyElementCreateUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/PropertyElementCreateUpdate"
              }
            }
          },
          "tags": [
            "property"
          ]
        },
        "delete": {
          "operationId": "property_element_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "property"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this property element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "property_pk",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/request/unit/": {
        "post": {
          "operationId": "request_unit_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UnitRequestCreate"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UnitRequestCreate"
              }
            }
          },
          "tags": [
            "request"
          ]
        },
        "parameters": []
      },
      "/service/": {
        "post": {
          "operationId": "service_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ServiceRequest"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ServiceRequest"
              }
            }
          },
          "tags": [
            "service"
          ]
        },
        "parameters": []
      },
      "/session/": {
        "get": {
          "operationId": "session_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "data_session_groups__group_id",
              "in": "query",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Sessions"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "session"
          ]
        },
        "post": {
          "operationId": "session_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SessionsCreateUpdate"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/SessionsCreateUpdate"
              }
            }
          },
          "tags": [
            "session"
          ]
        },
        "parameters": []
      },
      "/session/{id}/": {
        "get": {
          "operationId": "session_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Sessions"
              }
            }
          },
          "tags": [
            "session"
          ]
        },
        "put": {
          "operationId": "session_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SessionsCreateUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/SessionsCreateUpdate"
              }
            }
          },
          "tags": [
            "session"
          ]
        },
        "patch": {
          "operationId": "session_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SessionsCreateUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/SessionsCreateUpdate"
              }
            }
          },
          "tags": [
            "session"
          ]
        },
        "delete": {
          "operationId": "session_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "session"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this Data Session.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/standards/": {
        "get": {
          "operationId": "standards_list",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/StandardRead"
                }
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "post": {
          "operationId": "standards_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardWrite"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardWrite"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "parameters": []
      },
      "/standards/{id}/": {
        "get": {
          "operationId": "standards_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "put": {
          "operationId": "standards_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardWrite"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardWrite"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "patch": {
          "operationId": "standards_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardWrite"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardWrite"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "delete": {
          "operationId": "standards_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "standards"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this standard.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/standards/{id}/comments/": {
        "get": {
          "operationId": "standards_comments_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "post": {
          "operationId": "standards_comments_create",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this standard.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/standards/{id}/full_history/": {
        "get": {
          "operationId": "standards_full_history",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this standard.",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "/standards/{key}/{id}/": {
        "get": {
          "operationId": "standards_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "put": {
          "operationId": "standards_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "patch": {
          "operationId": "standards_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/StandardRead"
              }
            }
          },
          "tags": [
            "standards"
          ]
        },
        "delete": {
          "operationId": "standards_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "standards"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A unique integer value identifying this standard.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "/template/": {
        "get": {
          "operationId": "template_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/TemplateViews"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "template"
          ]
        },
        "parameters": []
      },
      "/template/brif_list/": {
        "get": {
          "operationId": "template_brif_list",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "ordering",
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/TemplateBriefViews"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "template"
          ]
        },
        "parameters": []
      },
      "/template/{id}/": {
        "get": {
          "operationId": "template_read",
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/TemplateViews"
              }
            }
          },
          "tags": [
            "template"
          ]
        },
        "put": {
          "operationId": "template_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TemplateUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/TemplateUpdate"
              }
            }
          },
          "tags": [
            "template"
          ]
        },
        "patch": {
          "operationId": "template_partial_update",
          "description": "",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TemplateUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/TemplateUpdate"
              }
            }
          },
          "tags": [
            "template"
          ]
        },
        "delete": {
          "operationId": "template_delete",
          "description": "",
          "parameters": [],
          "responses": {
            "204": {
              "description": ""
            }
          },
          "tags": [
            "template"
          ]
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A UUID string identifying this Template.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ]
      },
      "/user/followed/": {
        "get": {
          "operationId": "user_followed",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SafeUserFollowers"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "user"
          ]
        },
        "parameters": []
      },
      "/user/followers/": {
        "get": {
          "operationId": "user_followers",
          "description": "",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "A search term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "The initial index from which to return the results.",
              "required": false,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "required": [
                  "count",
                  "results"
                ],
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "next": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "previous": {
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SafeUserFollowers"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "user"
          ]
        },
        "parameters": []
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "title": "Email address",
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "profile_image": {
            "title": "Profile image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "cover_image": {
            "title": "Cover image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "following": {
            "title": "Following",
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "is_verified": {
            "title": "Is verified",
            "type": "boolean"
          },
          "is_active": {
            "title": "Active",
            "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
            "type": "boolean"
          },
          "is_premium": {
            "title": "Is premium",
            "type": "boolean"
          }
        }
      },
      "AccountSignup": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "title": "Email address",
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "password": {
            "title": "Password",
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        }
      },
      "CheckUserAvailability": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        }
      },
      "ForgotPasswordSerialzier": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        }
      },
      "InviteUser": {
        "required": [
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email",
              "minLength": 1
            }
          }
        }
      },
      "TokenObtainPair": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "minLength": 1
          },
          "password": {
            "title": "Password",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "UserAvailability": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "email": {
            "title": "Email address",
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          },
          "profile_image": {
            "title": "Profile image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "following": {
            "title": "Following",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ResendUserEmailVerificaton": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        }
      },
      "ResetPassword": {
        "required": [
          "token",
          "password",
          "uid"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "password": {
            "title": "Password",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "uid": {
            "title": "Uid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TokenRefresh": {
        "required": [
          "refresh"
        ],
        "type": "object",
        "properties": {
          "refresh": {
            "title": "Refresh",
            "type": "string",
            "minLength": 1
          },
          "access": {
            "title": "Access",
            "type": "string",
            "readOnly": true,
            "minLength": 1
          }
        }
      },
      "Token": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          },
          "profile_image": {
            "title": "Profile image",
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "x-nullable": true
          },
          "cover_image": {
            "title": "Cover image",
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "x-nullable": true
          }
        }
      },
      "StandardCategory": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "Reaction": {
        "required": [
          "reaction_type",
          "comment"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "reaction_type": {
            "title": "Reaction type",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "user": {
            "title": "User",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "user_email": {
            "title": "User email",
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "comment": {
            "title": "Comment",
            "type": "integer"
          }
        }
      },
      "Comment": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "content": {
            "title": "Content",
            "type": "string",
            "minLength": 1
          },
          "user": {
            "title": "User",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "user_email": {
            "title": "User email",
            "type": "string",
            "readOnly": true
          },
          "parent": {
            "title": "Parent",
            "type": "integer",
            "x-nullable": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "replies": {
            "title": "Replies",
            "type": "string",
            "readOnly": true
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Reaction"
            },
            "readOnly": true
          },
          "standard": {
            "title": "Standard",
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Component": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "type": {
            "title": "Type",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "ConfigTypes": {
        "required": [
          "name",
          "data_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$",
            "readOnly": true,
            "minLength": 1,
            "x-nullable": true
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "descriptor"
            ]
          }
        }
      },
      "ConfigTypeHistory": {
        "required": [
          "history_date",
          "history_type",
          "name",
          "data_type"
        ],
        "type": "object",
        "properties": {
          "history_id": {
            "title": "History id",
            "type": "integer",
            "readOnly": true
          },
          "history_date": {
            "title": "History date",
            "type": "string",
            "format": "date-time"
          },
          "history_type": {
            "title": "History type",
            "type": "string",
            "enum": [
              "+",
              "~",
              "-"
            ]
          },
          "history_user": {
            "title": "History user",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$",
            "maxLength": 255,
            "x-nullable": true
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "descriptor"
            ]
          },
          "public": {
            "title": "Public",
            "type": "boolean"
          }
        }
      },
      "ConstantTypes": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$",
            "readOnly": true,
            "minLength": 1,
            "x-nullable": true
          },
          "magnitude": {
            "title": "Magnitude",
            "type": "string",
            "enum": [
              "exa",
              "peta",
              "tera",
              "giga",
              "mega",
              "kilo",
              "hecto",
              "deca",
              "deci",
              "centi",
              "mili",
              "micro",
              "nano",
              "pico",
              "femto",
              "zepto"
            ],
            "default": "deca",
            "x-nullable": true
          },
          "magnitude_symbol": {
            "title": "Magnitude symbol",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "enum": [
              "m²",
              "m³",
              "kg",
              "s²",
              "N",
              "Pa",
              "J",
              "W",
              "C",
              "V",
              "F",
              "S",
              "Wb",
              "T",
              "H",
              "°C",
              "rad",
              "Hz",
              "lm",
              "lx",
              "Bq",
              "Gy",
              "Sv",
              "kat",
              "m",
              "g",
              "s",
              "A",
              "K",
              "cd",
              "min",
              "hr",
              "°",
              "mol",
              "m/s",
              "mph",
              "ft",
              "lbs",
              "in",
              "G",
              "I",
              "Hg",
              "m/s²",
              "SPL",
              "gpm",
              "gal",
              "B",
              "Btu",
              "cal",
              "eV",
              "ft.lbf",
              "ft.lbf/s",
              "in.lbf",
              "in.lbf/s",
              "hp",
              "Ω",
              "%",
              "Phons",
              "dB",
              "dBA",
              "dBC",
              "dBu",
              "dBV",
              "dBFS",
              "dBm",
              "dB SPL",
              "dBrA",
              "dBrG"
            ],
            "x-nullable": true
          },
          "is_liner": {
            "title": "Is liner",
            "type": "boolean"
          },
          "is_decibels": {
            "title": "Is decibels",
            "type": "boolean"
          }
        }
      },
      "DescriptorsList": {
        "required": [
          "descriptor_id",
          "descriptor"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "descriptor_id": {
            "title": "Descriptor id",
            "type": "string",
            "minLength": 1
          },
          "descriptor": {
            "title": "Descriptor",
            "type": "string",
            "minLength": 1
          },
          "value": {
            "title": "Value",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          }
        }
      },
      "Equipment": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "manufacturer": {
            "title": "Manufacturer",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "downloads": {
            "title": "Downloads",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "link": {
            "title": "Link",
            "type": "string",
            "format": "uri",
            "maxLength": 200,
            "x-nullable": true
          }
        }
      },
      "FileUploadUser": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          }
        }
      },
      "FileUploadGroup": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "UploadedFileList": {
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "$ref": "#/definitions/FileUploadUser"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FileUploadGroup"
            },
            "readOnly": true
          },
          "file_name": {
            "title": "File name",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "approjx",
              "wav"
            ],
            "readOnly": true
          },
          "uploaded_at": {
            "title": "Uploaded at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "UploadedFile": {
        "required": [
          "groups"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "$ref": "#/definitions/FileUploadUser"
          },
          "groups": {
            "title": "Groups",
            "type": "object"
          },
          "file_name": {
            "title": "File name",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "approjx",
              "wav"
            ],
            "readOnly": true
          },
          "uploaded_at": {
            "title": "Uploaded at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "file_url": {
            "title": "File url",
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "x-nullable": true
          }
        }
      },
      "Notifications": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "title": "id",
            "type": "string"
          },
          "author": {
            "title": "Author",
            "type": "string",
            "readOnly": true
          },
          "title": {
            "title": "Title",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "notification_category": {
            "title": "Notification category",
            "type": "string",
            "enum": [
              "general",
              "invite_notification",
              "follow_notification",
              "group_invite_notification",
              "sessions_notification"
            ]
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "GroupTags": {
        "required": [
          "name",
          "slug"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "GroupsList": {
        "required": [
          "group_name",
          "tags"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "group_name": {
            "title": "Group name",
            "type": "string",
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GroupTags"
            }
          },
          "members": {
            "title": "Members",
            "type": "string",
            "readOnly": true
          },
          "image": {
            "title": "Image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "image_url": {
            "title": "Image url",
            "type": "string",
            "format": "uri",
            "minLength": 1
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "approver": {
            "title": "Approver",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "uploader": {
            "title": "Uploader",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "inviter": {
            "title": "Inviter",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "poster": {
            "title": "Poster",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "joined": {
            "title": "Joined",
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "requested": {
            "title": "Requested",
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          }
        }
      },
      "Members": {
        "required": [
          "user",
          "group_role"
        ],
        "type": "object",
        "properties": {
          "user": {
            "title": "User",
            "type": "string",
            "format": "uuid"
          },
          "group_role": {
            "title": "Group role",
            "type": "string",
            "enum": [
              "MEMBER",
              "ADMIN"
            ]
          }
        }
      },
      "NestedGroup": {
        "required": [
          "group_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "group_name": {
            "title": "Group name",
            "type": "string",
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": true
            },
            "x-nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Members"
            }
          },
          "image": {
            "title": "Image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "image_url": {
            "title": "Image url",
            "type": "string",
            "format": "uri",
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "approver": {
            "title": "Approver",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "uploader": {
            "title": "Uploader",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "inviter": {
            "title": "Inviter",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "poster": {
            "title": "Poster",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          }
        }
      },
      "UpdateNestedGroup": {
        "required": [
          "group_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "group_name": {
            "title": "Group name",
            "type": "string",
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "image": {
            "title": "Image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "image_url": {
            "title": "Image url",
            "type": "string",
            "format": "uri",
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "approver": {
            "title": "Approver",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "uploader": {
            "title": "Uploader",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "inviter": {
            "title": "Inviter",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "poster": {
            "title": "Poster",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          }
        }
      },
      "AddMemberToGroup": {
        "required": [
          "members"
        ],
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Members"
            }
          }
        }
      },
      "UpdateUserRoleForGroup": {
        "required": [
          "group_role"
        ],
        "type": "object",
        "properties": {
          "group_role": {
            "title": "Group role",
            "type": "string",
            "enum": [
              "MEMBER",
              "ADMIN"
            ]
          }
        }
      },
      "SafeUser": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "readOnly": true,
            "minLength": 1
          },
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "title": "Email address",
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "profile_image": {
            "title": "Profile image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          }
        }
      },
      "GroupInvitations": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "user": {
            "$ref": "#/definitions/SafeUser"
          },
          "is_accepted": {
            "title": "Is accepted",
            "type": "boolean"
          },
          "group_role": {
            "title": "Group role",
            "type": "string",
            "enum": [
              "ADMIN",
              "OWNER",
              "MEMBER"
            ]
          },
          "group": {
            "title": "Group",
            "type": "string",
            "readOnly": true,
            "minLength": 1
          }
        }
      },
      "Tags": {
        "required": [
          "name",
          "slug"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "ProjectClean": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "file_name": {
            "title": "File name",
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "format": "uri"
          },
          "project_file_type": {
            "title": "Project file type",
            "type": "string",
            "enum": [
              "xlsx",
              "csv",
              "zip"
            ],
            "x-nullable": true
          }
        }
      },
      "Group": {
        "required": [
          "group_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "group_name": {
            "title": "Group name",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Limits": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "limit": {
            "title": "Limit",
            "type": "object",
            "x-nullable": true
          },
          "limit_types": {
            "title": "Limit types",
            "type": "string",
            "enum": [
              "Upper Limit",
              "Lower Limit",
              "Unknown"
            ]
          },
          "x_units": {
            "title": "X units",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "y_units": {
            "title": "Y units",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "dimension_types": {
            "title": "Dimension types",
            "type": "string",
            "enum": [
              "2D",
              "1D",
              "Legacy"
            ]
          }
        },
        "x-nullable": true
      },
      "ListProject": {
        "required": [
          "tags",
          "descriptors",
          "groups",
          "limits",
          "owner",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Tags"
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DescriptorsList"
            }
          },
          "categories": {
            "title": "Categories",
            "type": "string",
            "readOnly": true
          },
          "clean_files": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ProjectClean"
            },
            "readOnly": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Group"
            }
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Limits"
            },
            "x-nullable": true
          },
          "owner": {
            "$ref": "#/definitions/SafeUser"
          },
          "can_delete": {
            "title": "Can delete",
            "type": "boolean",
            "default": true
          },
          "key": {
            "title": "Key",
            "type": "string",
            "readOnly": true,
            "minLength": 1
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "v2_json_file": {
            "title": "V2 json file",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "PENDING",
              "PROVISIONING",
              "IS_PROCESSING",
              "PROCESSING_DEVICE_DATA",
              "DONE",
              "FAILED"
            ]
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "xls"
            ]
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          },
          "units": {
            "title": "Units",
            "type": "object",
            "x-nullable": true
          },
          "invalid_cells_action": {
            "title": "Invalid cells action",
            "type": "string",
            "enum": [
              "None",
              "CONVERT TO DEFAULT",
              "INTERPOLATION"
            ],
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "x-nullable": true
          },
          "source": {
            "title": "Source",
            "type": "string",
            "enum": [
              "WEB",
              "NATIVE"
            ]
          },
          "template": {
            "title": "Template",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "Units": {
        "required": [
          "category",
          "index_column",
          "x_axis",
          "y_axis"
        ],
        "type": "object",
        "properties": {
          "category": {
            "title": "Category",
            "type": "string",
            "minLength": 1
          },
          "index_column": {
            "title": "Index column",
            "type": "string",
            "minLength": 1
          },
          "x_axis": {
            "title": "X axis",
            "type": "string",
            "minLength": 1
          },
          "y_axis": {
            "title": "Y axis",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Descriptors": {
        "required": [
          "descriptor"
        ],
        "type": "object",
        "properties": {
          "project": {
            "title": "Project",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "descriptor": {
            "title": "Descriptor",
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          }
        },
        "x-nullable": true
      },
      "DataIngestionUpload": {
        "required": [
          "file_url",
          "name",
          "units",
          "tags",
          "descriptors",
          "groups"
        ],
        "type": "object",
        "properties": {
          "file_url": {
            "title": "File url",
            "type": "string",
            "format": "uri",
            "minLength": 1
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Units"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": true
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Descriptors"
            },
            "x-nullable": true
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "xls"
            ]
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "x-nullable": true
          }
        }
      },
      "Filter": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "title": "Key",
            "type": "string",
            "minLength": 1
          },
          "value": {
            "title": "Value",
            "type": "string",
            "minLength": 1
          },
          "is_negative": {
            "title": "Is negative",
            "type": "boolean",
            "default": false
          },
          "expression": {
            "title": "Expression",
            "type": "string",
            "default": "eq",
            "minLength": 1
          },
          "operand": {
            "title": "Operand",
            "type": "string",
            "default": "and",
            "minLength": 1
          }
        }
      },
      "ProjectDetail": {
        "required": [
          "tags",
          "descriptors",
          "name",
          "groups",
          "limits",
          "owner"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Tags"
            }
          },
          "categories": {
            "title": "Categories",
            "type": "string",
            "readOnly": true
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DescriptorsList"
            }
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "PENDING",
              "PROVISIONING",
              "IS_PROCESSING",
              "PROCESSING_DEVICE_DATA",
              "DONE",
              "FAILED"
            ]
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "xls"
            ]
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Group"
            }
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Limits"
            },
            "x-nullable": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "owner": {
            "$ref": "#/definitions/SafeUser"
          }
        }
      },
      "MultipleProjectDetails": {
        "required": [
          "project_ids"
        ],
        "type": "object",
        "properties": {
          "project_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Device": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 600,
            "minLength": 1
          }
        }
      },
      "DevicesAndCategoryDevice": {
        "required": [
          "device",
          "x_units",
          "y_units",
          "category",
          "project"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "device": {
            "$ref": "#/definitions/Device"
          },
          "x_units": {
            "title": "X units",
            "type": "string",
            "minLength": 1,
            "x-nullable": true
          },
          "y_units": {
            "title": "Y units",
            "type": "string",
            "minLength": 1,
            "x-nullable": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "dimension_types": {
            "title": "Dimension types",
            "type": "string",
            "enum": [
              "2D",
              "1D",
              "Legacy"
            ]
          },
          "category": {
            "title": "Category",
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "title": "Project",
            "type": "string",
            "format": "uuid"
          },
          "x_units_v2": {
            "title": "X units v2",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          },
          "y_units_v2": {
            "title": "Y units v2",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "CreateLimits": {
        "required": [
          "name",
          "tags",
          "descriptors",
          "groups",
          "limits"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": true
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Descriptors"
            },
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Limits"
            }
          }
        }
      },
      "Project": {
        "required": [
          "tags",
          "groups",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Tags"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Group"
            }
          },
          "clean_files": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ProjectClean"
            },
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "serial_number": {
            "title": "Serial number",
            "type": "integer",
            "readOnly": true
          },
          "readable_key": {
            "title": "Readable key",
            "type": "string",
            "maxLength": 100,
            "x-nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "v2_json_file": {
            "title": "V2 json file",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "PENDING",
              "PROVISIONING",
              "IS_PROCESSING",
              "PROCESSING_DEVICE_DATA",
              "DONE",
              "FAILED"
            ]
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "xls"
            ]
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          },
          "units": {
            "title": "Units",
            "type": "object",
            "x-nullable": true
          },
          "invalid_cells_action": {
            "title": "Invalid cells action",
            "type": "string",
            "enum": [
              "None",
              "CONVERT TO DEFAULT",
              "INTERPOLATION"
            ],
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "x-nullable": true
          },
          "source": {
            "title": "Source",
            "type": "string",
            "enum": [
              "WEB",
              "NATIVE"
            ]
          },
          "template": {
            "title": "Template",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          },
          "owner": {
            "title": "Owner",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "UnitsJSONSerialzier": {
        "required": [
          "x_units",
          "y_units"
        ],
        "type": "object",
        "properties": {
          "x_units": {
            "title": "X units",
            "type": "string",
            "minLength": 1
          },
          "y_units": {
            "title": "Y units",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "StatisticsNodeAndPrimaryNode": {
        "required": [
          "name",
          "values"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "minLength": 1
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number",
              "x-nullable": true
            }
          }
        }
      },
      "Statistics": {
        "required": [
          "categoryName",
          "units",
          "primaryNode",
          "nodes"
        ],
        "type": "object",
        "properties": {
          "categoryName": {
            "title": "Categoryname",
            "type": "string",
            "minLength": 1
          },
          "units": {
            "$ref": "#/definitions/UnitsJSONSerialzier"
          },
          "primaryNode": {
            "$ref": "#/definitions/StatisticsNodeAndPrimaryNode"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StatisticsNodeAndPrimaryNode"
            }
          }
        }
      },
      "CreateUpdateStatistics": {
        "required": [
          "name",
          "tags",
          "descriptors",
          "groups",
          "statistics"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": true
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Descriptors"
            },
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Statistics"
            }
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          }
        }
      },
      "TemplateData": {
        "required": [
          "records",
          "version"
        ],
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "plug": {
            "title": "Plug",
            "type": "object",
            "x-nullable": true
          },
          "version": {
            "title": "Version",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "TemplateIntermediate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/TemplateData"
          },
          "extends": {
            "title": "Extends",
            "type": "string",
            "x-nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "x-nullable": true
          }
        },
        "x-nullable": true
      },
      "DataIngestionUploadV2": {
        "required": [
          "file_url",
          "v2_json_file_url",
          "name",
          "tags",
          "descriptors",
          "groups"
        ],
        "type": "object",
        "properties": {
          "file_url": {
            "title": "File url",
            "type": "string",
            "format": "uri",
            "minLength": 1
          },
          "v2_json_file_url": {
            "title": "V2 json file url",
            "type": "string",
            "format": "uri",
            "minLength": 1
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": true
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Descriptors"
            },
            "x-nullable": true
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "template": {
            "$ref": "#/definitions/TemplateIntermediate"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "x-nullable": true
          },
          "source": {
            "title": "Source",
            "type": "string",
            "enum": [
              "WEB",
              "NATIVE"
            ]
          }
        }
      },
      "ProjectUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": true
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Descriptors"
            },
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "x-nullable": true
          }
        }
      },
      "PowerShellAndCurl": {
        "required": [
          "powershell",
          "curl"
        ],
        "type": "object",
        "properties": {
          "powershell": {
            "title": "Powershell",
            "type": "string",
            "x-nullable": true
          },
          "curl": {
            "title": "Curl",
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "PropertyBriefViews": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "PropertyElement": {
        "required": [
          "unit",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "unit": {
            "$ref": "#/definitions/ConstantTypes"
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "type": {
            "title": "Type",
            "type": "string",
            "enum": [
              "NUMERIC",
              "STRING",
              "BOOLEAN",
              "DATE_TIME"
            ]
          },
          "dimension": {
            "title": "Dimension",
            "type": "string",
            "enum": [
              "2D",
              "1D",
              "Legacy"
            ]
          }
        }
      },
      "PropertiesList": {
        "required": [
          "property",
          "property_element",
          "category",
          "device",
          "project"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "property": {
            "$ref": "#/definitions/PropertyBriefViews"
          },
          "property_element": {
            "$ref": "#/definitions/PropertyElement"
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "value": {
            "title": "Value",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "category": {
            "title": "Category",
            "type": "string",
            "format": "uuid"
          },
          "device": {
            "title": "Device",
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "title": "Project",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Category": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 600,
            "minLength": 1
          }
        }
      },
      "Property": {
        "required": [
          "property_element",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "property_element": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PropertyElement"
            }
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "PropertyCreateElement": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "type": {
            "title": "Type",
            "type": "string",
            "enum": [
              "NUMERIC",
              "STRING",
              "BOOLEAN",
              "DATE_TIME"
            ]
          },
          "dimension": {
            "title": "Dimension",
            "type": "string",
            "enum": [
              "2D",
              "1D",
              "Legacy"
            ]
          },
          "unit": {
            "title": "Unit",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "PropertyCreate": {
        "required": [
          "property_element",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "property_element": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PropertyCreateElement"
            }
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "UpdateProperty": {
        "required": [
          "name",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "user": {
            "title": "User",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PropertyElementCreateUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "type": {
            "title": "Type",
            "type": "string",
            "enum": [
              "NUMERIC",
              "STRING",
              "BOOLEAN",
              "DATE_TIME"
            ]
          },
          "dimension": {
            "title": "Dimension",
            "type": "string",
            "enum": [
              "2D",
              "1D",
              "Legacy"
            ]
          },
          "unit": {
            "title": "Unit",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "UnitRequestCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$",
            "readOnly": true,
            "minLength": 1,
            "x-nullable": true
          },
          "type": {
            "title": "Type",
            "type": "string",
            "enum": [
              "si",
              "dimensionless",
              "decibel"
            ]
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "enum": [
              "m²",
              "m³",
              "kg",
              "s²",
              "N",
              "Pa",
              "J",
              "W",
              "C",
              "V",
              "F",
              "S",
              "Wb",
              "T",
              "H",
              "°C",
              "rad",
              "Hz",
              "lm",
              "lx",
              "Bq",
              "Gy",
              "Sv",
              "kat",
              "m",
              "g",
              "s",
              "A",
              "K",
              "cd",
              "min",
              "hr",
              "°",
              "mol",
              "m/s",
              "mph",
              "ft",
              "lbs",
              "in",
              "G",
              "I",
              "Hg",
              "m/s²",
              "SPL",
              "gpm",
              "gal",
              "B",
              "Btu",
              "cal",
              "eV",
              "ft.lbf",
              "ft.lbf/s",
              "in.lbf",
              "in.lbf/s",
              "hp",
              "Ω",
              "%",
              "Phons",
              "dB",
              "dBA",
              "dBC",
              "dBu",
              "dBV",
              "dBFS",
              "dBm",
              "dB SPL",
              "dBrA",
              "dBrG"
            ],
            "readOnly": true,
            "x-nullable": true
          },
          "approved": {
            "title": "Approved",
            "type": "boolean",
            "readOnly": true
          },
          "requested_by": {
            "title": "Requested by",
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "x-nullable": true
          }
        }
      },
      "ServiceRequest": {
        "required": [
          "email",
          "message",
          "subject"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "minLength": 1
          },
          "message": {
            "title": "Message",
            "type": "string",
            "minLength": 1
          },
          "subject": {
            "title": "Subject",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "service_type": {
            "title": "Service type",
            "type": "string",
            "enum": [
              "support",
              "service_request"
            ]
          }
        }
      },
      "DataSessionsGroup": {
        "required": [
          "group"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "group": {
            "title": "Group",
            "type": "string",
            "minLength": 1
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "DataSessionUsers": {
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "user": {
            "$ref": "#/definitions/SafeUser"
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Sessions": {
        "required": [
          "data_session_groups",
          "data_session_user",
          "name",
          "user",
          "projects"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "data_session_groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DataSessionsGroup"
            }
          },
          "data_session_user": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DataSessionUsers"
            }
          },
          "owner_name": {
            "title": "Owner name",
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "project_ids": {
            "title": "Project ids",
            "type": "object"
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "user": {
            "title": "User",
            "type": "string",
            "format": "uuid"
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true
          }
        }
      },
      "SessionsCreateUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "data_session_groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "data_session_user": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "StandardGroup": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "Configuration": {
        "required": [
          "name",
          "slug",
          "data_type",
          "for_user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$",
            "maxLength": 255,
            "x-nullable": true
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "descriptor"
            ]
          },
          "public": {
            "title": "Public",
            "type": "boolean",
            "default": true
          },
          "for_user": {
            "title": "For user",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "StandardUploadedFile": {
        "required": [
          "file_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "integer",
            "readOnly": true
          },
          "file_name": {
            "title": "File name",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "approjx",
              "wav"
            ]
          },
          "uploaded_at": {
            "title": "Uploaded at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "title": "User",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true
          }
        }
      },
      "StandardRead": {
        "required": [
          "key",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "readOnly": true
          },
          "key": {
            "title": "Key",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "Draft",
              "In Progress",
              "Review",
              "Final"
            ]
          },
          "title": {
            "title": "Title",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string",
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StandardGroup"
            },
            "readOnly": true
          },
          "equipment": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Equipment"
            },
            "readOnly": true
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Component"
            },
            "readOnly": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StandardCategory"
            },
            "readOnly": true
          },
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Configuration"
            },
            "readOnly": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StandardUploadedFile"
            },
            "readOnly": true
          },
          "full_history": {
            "title": "Full history",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "StandardWrite": {
        "required": [
          "key",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "readOnly": true
          },
          "key": {
            "title": "Key",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "Draft",
              "In Progress",
              "Review",
              "Final"
            ]
          },
          "title": {
            "title": "Title",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "uniqueItems": true
          },
          "components": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "uniqueItems": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "uniqueItems": true
          },
          "configurations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "uniqueItems": true
          }
        }
      },
      "TemplateProject": {
        "required": [
          "tags",
          "groups",
          "descriptors",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Tags"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Group"
            }
          },
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Descriptors"
            },
            "x-nullable": true
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "serial_number": {
            "title": "Serial number",
            "type": "integer",
            "readOnly": true
          },
          "readable_key": {
            "title": "Readable key",
            "type": "string",
            "maxLength": 100,
            "x-nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 200,
            "minLength": 1
          },
          "file": {
            "title": "File",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "v2_json_file": {
            "title": "V2 json file",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "PENDING",
              "PROVISIONING",
              "IS_PROCESSING",
              "PROCESSING_DEVICE_DATA",
              "DONE",
              "FAILED"
            ]
          },
          "file_type": {
            "title": "File type",
            "type": "string",
            "enum": [
              "xls"
            ]
          },
          "data_type": {
            "title": "Data type",
            "type": "string",
            "enum": [
              "measurement",
              "limit",
              "statistic"
            ]
          },
          "units": {
            "title": "Units",
            "type": "object",
            "x-nullable": true
          },
          "invalid_cells_action": {
            "title": "Invalid cells action",
            "type": "string",
            "enum": [
              "None",
              "CONVERT TO DEFAULT",
              "INTERPOLATION"
            ],
            "x-nullable": true
          },
          "is_public": {
            "title": "Is public",
            "type": "boolean"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "x-nullable": true
          },
          "source": {
            "title": "Source",
            "type": "string",
            "enum": [
              "WEB",
              "NATIVE"
            ]
          },
          "template": {
            "title": "Template",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          },
          "owner": {
            "title": "Owner",
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          }
        }
      },
      "TemplateViews": {
        "required": [
          "owner",
          "project"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "owner": {
            "$ref": "#/definitions/SafeUser"
          },
          "project": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TemplateProject"
            }
          },
          "created_at": {
            "title": "Created at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "title": "Updated at",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "template_data": {
            "title": "Template data",
            "type": "object"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "readOnly": true,
            "uniqueItems": true
          }
        }
      },
      "TemplateBriefViews": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "TemplateUpdate": {
        "required": [
          "groups"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "x-nullable": true
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "SafeUserFollowers": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "readOnly": true,
            "minLength": 1
          },
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "title": "Email address",
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "profile_image": {
            "title": "Profile image",
            "type": "string",
            "readOnly": true,
            "x-nullable": true,
            "format": "uri"
          },
          "followed_back": {
            "title": "Followed back",
            "type": "boolean",
            "default": true
          }
        }
      }
    }
  }